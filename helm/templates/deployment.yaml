apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  name: {{ .Values.deployment.name }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ .Values.deployment.replicaCount }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ .Values.deployment.name }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app: {{ .Values.deployment.name }}
    spec:
      imagePullSecrets:
        - name: regcred
      containers:
        - name: {{ .Values.container.image.name }}
          image: "{{ .Values.container.repository }}{{ .Values.container.image.name }}:{{ .Values.container.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.container.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
              protocol: TCP
              name: {{ .Values.deployment.name }}
          livenessProbe:
            failureThreshold: 15
            httpGet:
              path: actuator/info
              port: {{ .Values.service.port }}
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          ports:
            - containerPort: {{ .Values.service.port }}
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: actuator/info
              port: {{ .Values.service.port }}
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2
          resources:
            limits:
              cpu: 8001m
              memory: 800Mi
            requests:
              cpu: 200m
              memory: 401Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          envFrom:
            {{- range $.Values.environment.variables._default_config_maps }}
            - configMapRef:
                name: {{ . }}
            {{- end }}
            {{- range $.Values.environment.variables.config_maps }}
            - configMapRef:
                name: {{ . }}
            {{- end }}
            {{- range $.Values.environment.variables.secrets }}
            - secretRef:
                name: {{ . }}
            {{- end }}